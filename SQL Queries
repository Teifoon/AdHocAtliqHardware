#1  Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.

SELECT market
FROM dim_customer
WHERE customer= 'Atliq Exclusive' AND region= 'APAC'
GROUP BY market;


#2  What is the percentage of unique product increase in 2021 vs. 2020?

SELECT
A.unq_20 AS unique_products_2020,
B.unq_21 AS unique_products_2021,
ROUND((B.unq_21-A.unq_20)*100/A.unq_20,2) as pct_change
FROM 
(
(SELECT COUNT(DISTINCT(product_code)) as unq_20
FROM fact_sales_monthly
WHERE fiscal_year = 2020) A,

(SELECT COUNT(DISTINCT(product_code)) as unq_21
FROM fact_sales_monthly
WHERE fiscal_year = 2021) B
);


#3  Provide a report with all the unique product counts for each segment and sort them in descending order of product counts.

SELECT
segment,
COUNT(product) as product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;


#4  Follow-up: Which segment had the most increase in unique products in 2021 vs 2020?

WITH q4 AS 
(SELECT
segment as s1,
COUNT(DISTINCT(f.product_code)) AS fpc
FROM dim_product d, fact_sales_monthly f
WHERE d.product_code=f.product_code
GROUP BY d.segment, f.fiscal_year
HAVING f.fiscal_year='2020'),

q4_2 AS
(SELECT
segment AS s2,
COUNT(DISTINCT(f.product_code)) AS fpc_2
FROM dim_product d, fact_sales_monthly f
WHERE d.product_code=f.product_code
GROUP BY d.segment, f.fiscal_year
HAVING f.fiscal_year='2021')

SELECT
q4.s1 AS segment,
q4.fpc AS product_count_2020,
q4_2.fpc_2 AS product_count_2021,
(q4_2.fpc_2-q4.fpc) AS difference
FROM q4, q4_2
WHERE q4.s1=q4_2.s2
order by difference desc

#5  Get the products that have the highest and lowest manufacturing costs.

(SELECT
f.product_code,
d.product,
f.manufacturing_cost
FROM fact_manufacturing_cost f, dim_product d
WHERE f.product_code=d.product_code
ORDER BY f.manufacturing_cost DESC
LIMIT 1)
UNION
(SELECT
f.product_code,
d.product,
f.manufacturing_cost
FROM fact_manufacturing_cost f, dim_product d
WHERE f.product_code=d.product_code
ORDER BY f.manufacturing_cost ASC
LIMIT 1) 

#6  Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market.

SELECT
pr.customer_code, c.customer,
pr.pre_invoice_discount_pct AS average_discount_percentage
FROM fact_pre_invoice_deductions pr
JOIN dim_customer c
USING (customer_code)
WHERE pre_invoice_discount_pct > (SELECT AVG(pre_invoice_discount_pct) FROM fact_pre_invoice_deductions)
AND c.market='India'
ORDER BY average_discount_percentage DESC
LIMIT 5

#7  Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month . This analysis helps to get an idea of low and
high-performing months and take strategic decisions.

SELECT
CONCAT(MONTHNAME(s.date), ' (', YEAR(s.date), ')') AS month,
s.fiscal_year,
ROUND(SUM(s.sold_quantity*g.gross_price),2) as gross_sales_amount
FROM fact_sales_monthly s
JOIN fact_gross_price g
ON s.product_code=g.product_code
JOIN dim_customer c
ON s.customer_code=c.customer_code
WHERE c.customer='Atliq Exclusive'
GROUP BY month, s.fiscal_year
ORDER BY s.fiscal_year

#8  In which quarter of 2020, got the maximum total_sold_quantity?

SELECT
CASE
WHEN date BETWEEN '2019-09-01' AND '2019-11-30' THEN 'Q1'
WHEN date BETWEEN '2019-12-01' AND '2020-02-28' THEN 'Q2'
WHEN date BETWEEN '2020-03-01' AND '2020-05-31' THEN 'Q3'
WHEN date BETWEEN '2020-06-01' AND '2020-08-31' THEN 'Q4'
END AS quarters,
ROUND(SUM(sold_quantity)) AS total_sold_quantity
FROM fact_sales_monthly
WHERE fiscal_year=2020
GROUP BY quarters
ORDER BY total_sold_quantity DESC;

#9  Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution?

WITH cgp AS (
SELECT c.channel, SUM(s.sold_quantity*g.gross_price) AS total_sales
FROM fact_sales_monthly s
JOIN dim_customer c ON s.customer_code=c.customer_code
JOIN fact_gross_price g ON s.product_code=g.product_code
WHERE s.fiscal_year=2021
GROUP BY c.channel
ORDER BY total_sales DESC)

SELECT channel, ROUND(total_sales/1000000,2) AS gross_sales_mln,
ROUND(total_sales/(SUM(total_sales) OVER())*100,2) AS percentage
FROM cgp;

#10  Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021?

WITH q10 AS (
SELECT
d.division, f.product_code, d.product,
SUM(f.sold_quantity) as total_sold_quantity
FROM fact_sales_monthly f
JOIN dim_product d ON f.product_code=d.product_code
WHERE f.fiscal_year = 2021 
GROUP BY f.product_code, division, d.product),

q10_2 AS (
SELECT division, product_code, product, total_sold_quantity,
RANK() OVER(PARTITION BY division ORDER BY total_sold_quantity DESC) AS 'rank_order'
FROM q10)

SELECT q10.division, q10.product_code, q10.product, q10_2.total_sold_quantity, q10_2.rank_order
FROM q10 JOIN q10_2 ON q10.product_code=q10_2.product_code
WHERE q10_2.rank_order IN (1,2,3)
